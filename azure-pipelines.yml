# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: "ubuntu-16.04"

variables:
  buildConfiguration: 'Release'
  BUILD_DIR: $(Agent.BuildDirectory)
  SOURCE_DIR: $(Build.SourcesDirectory)
  
strategy:
  matrix:
    AABB_tree  :
      PACKAGE: AABB_tree
steps:

- checkout: self
  fetchDepth: 1
  
- script: |
    sudo apt install -y build-essential cmake libopencv-dev libsuitesparse-dev tar libboost-dev libboost-program-options-dev libboost-thread-dev libgmp10-dev libmpfr-dev zlib1g-dev libeigen3-dev libipe-dev libmpfi-dev libtbb-dev
  displayName: Install CGAL Dependencies

- bash: |
    cd $BUILD_DIR
    cmake  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DWITH_tests=ON -DWITH_examples=ON -DCMAKE_CXX_FLAGS_RELEASE='-Wall -frounding-math' $SOURCE_DIR
    INIT=""
    NO_PARALLEL=""
    for pkg in ${PACKAGE}; do
      if [ pkg == "Kernel_23" ]; then
        NO_PARALLEL="true"
      fi
      if [ -z "$INIT" ]; then
        TO_TEST=$pkg
        INIT="y"
      else
        TO_TEST="${TO_TEST}|$pkg"
      fi
    done
    if [ -z $NO_PARALLEL ]; then
      ctest -L ${TO_TEST} -E execution___of__ -VV
    else
      ctest -j2 -L ${TO_TEST} -E execution___of__ -VV
    fi
  displayName: Test
  env:
    name: Linux
    

