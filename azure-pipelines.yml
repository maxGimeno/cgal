# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: "vs2017-win2016"

variables:
  buildConfiguration: 'Release'
  BUILD_DIR: $(Agent.BuildDirectory)
  SOURCE_DIR: $(Build.SourcesDirectory)
  
strategy:
  matrix:
    AABB_tree Advancing_front_surface_reconstruction Algebraic_foundations  :
      PACKAGE: AABB_tree Advancing_front_surface_reconstruction Algebraic_foundations
    Algebraic_kernel_d Algebraic_kernel_for_circles Algebraic_kernel_for_spheres  :
      PACKAGE: Algebraic_kernel_d Algebraic_kernel_for_circles Algebraic_kernel_for_spheres
    Alpha_shapes_2 Alpha_shapes_3 Apollonius_graph_2  :
      PACKAGE: Alpha_shapes_2 Alpha_shapes_3 Apollonius_graph_2
    Arithmetic_kernel Arrangement_on_surface_2 Barycentric_coordinates_2  :
      PACKAGE: Arithmetic_kernel Arrangement_on_surface_2 Barycentric_coordinates_2
    BGL Boolean_set_operations_2 Bounding_volumes  :
      PACKAGE: BGL Boolean_set_operations_2 Bounding_volumes
    Box_intersection_d Cartesian_kernel CGAL_Core  :
      PACKAGE: Box_intersection_d Cartesian_kernel CGAL_Core
    CGAL_ImageIO CGAL_ipelets Circular_kernel_2  :
      PACKAGE: CGAL_ImageIO CGAL_ipelets Circular_kernel_2
    Circular_kernel_3 Circulator Classification  :
      PACKAGE: Circular_kernel_3 Circulator Classification
    Combinatorial_map Cone_spanners_2 Convex_decomposition_3  :
      PACKAGE: Combinatorial_map Cone_spanners_2 Convex_decomposition_3
    Convex_hull Distance  :
      PACKAGE: Convex_hull Distance
    Envelope Filtered_kernel  :
      PACKAGE: Envelope Filtered_kernel
    Generalized_map Generator Geomview  :
      PACKAGE: Generalized_map Generator Geomview
    GraphicsView HalfedgeDS Hash_map  :
      PACKAGE: GraphicsView HalfedgeDS Hash_map
    Heat_method_3 Homogeneous_kernel Hyperbolic_triangulation_2  :
      PACKAGE: Heat_method_3 Homogeneous_kernel Hyperbolic_triangulation_2
    Inscribed_areas Installation Interpolation  :
      PACKAGE: Inscribed_areas Installation Interpolation
    Intersections Interval_skip_list  :
      PACKAGE: Intersections Interval_skip_list
    Interval_support Inventor Jet_fitting_3  :
      PACKAGE: Interval_support Inventor Jet_fitting_3
    Kernel_23 Kernel_d LEDA  :
      PACKAGE: Kernel_23 Kernel_d LEDA
    Linear_cell_complex Matrix_search Mesh_2  :
      PACKAGE: Linear_cell_complex Matrix_search Mesh_2
    Mesh_3  :
      PACKAGE: Mesh_3
    Mesher_level Minkowski_sum_2 Minkowski_sum_3  :
      PACKAGE: Mesher_level Minkowski_sum_2 Minkowski_sum_3
    Modifier Modular_arithmetic Nef  :
      PACKAGE: Modifier Modular_arithmetic Nef

    NewKernel_d Number_types Optimal_transportation_reconstruction_2  :
      PACKAGE: NewKernel_d Number_types Optimal_transportation_reconstruction_2
    Optimisation_basic Partition_2 Periodic_2_triangulation_2  :
      PACKAGE: Optimisation_basic Partition_2 Periodic_2_triangulation_2
    Periodic_3_mesh_3 Periodic_3_mesh_3Periodic_4_hyperbolic_triangulation_2  :
      PACKAGE: Periodic_3_mesh_3 Periodic_3_mesh_3Periodic_4_hyperbolic_triangulation_2
    Point_set :
      PACKAGE: Point_set
  
steps:

- powershell: |
    Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    Write-Host "##vso[task.prependpath]$env:CONDA\Library\bin"
    Write-Host "##vso[task.prependpath]$env:$(BUILD_DIR)\bin\Release"
  displayName: Add conda to PATH

- checkout: self
  fetchDepth: 1
  
- script: |
    conda install -y -c conda-forge cgal --only-deps
    
  displayName: Install CGAL Dependencies

- script: |
    conda install -y -c anaconda jom
    
  displayName: Install JOM
  
- script: |
    set VC_PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\"
    set BASH_PATH="C:\Program Files\Git\usr\bin"
    %VC_PATH%\vcvars64.bat && %BASH_PATH%\bash.exe %SOURCE_DIR%\export.sh
  displayName: Create Setup



- bash: |
    #symlink jom.exe to avoid polluting the path with the CONDA root dir
    ln -s /c/Miniconda/jom.exe /usr/bin/jom.exe
    source /d/a/setup
    cd $BUILD_DIR
    cmake  -G "NMake Makefiles JOM" -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DWITH_tests=ON -DWITH_examples=ON -DCMAKE_CXX_FLAGS_RELEASE='-DMSC_USE_DLL -DCGAL_NDEBUG /Od ' -DCMAKE_PREFIX_PATH="C:\Miniconda\Library" $SOURCE_DIR
    INIT=""
    NO_PARALLEL=""
    for pkg in ${PACKAGE}; do
      if [ pkg == "Kernel_23" ]; then
        NO_PARALLEL="true"
      fi
      if [ -z "$INIT" ]; then
        TO_TEST=$pkg
        INIT="y"
      else
        TO_TEST="${TO_TEST}|$pkg"
      fi
    done
    if [ -z $NO_PARALLEL ]; then
      ctest --build-config "Release" -L ${TO_TEST} -E execution___of__ -VV
    else
      ctest -j2 --build-config "Release" -L ${TO_TEST} -E execution___of__ -VV
    fi
  displayName: Test
  env:
    name: Microsoft
    

